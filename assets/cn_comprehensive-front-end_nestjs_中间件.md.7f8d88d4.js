import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.5d4b0450.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"cn/comprehensive-front-end/nestjs/中间件.md","filePath":"cn/comprehensive-front-end/nestjs/中间件.md","lastUpdated":1699863693000}'),p={name:"cn/comprehensive-front-end/nestjs/中间件.md"},e=l(`<h2 id="创建中间件" tabindex="-1">创建中间件 <a class="header-anchor" href="#创建中间件" aria-label="Permalink to &quot;创建中间件&quot;">​</a></h2><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Injectable, NestMiddleware } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@nestjs/common&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Request, Response, NextFunction } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;express&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#B392F0;">Injectable</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#6A737D;">// 创建中间件类，实现NestMiddleware接口</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LoggerMiddleware</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NestMiddleware</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">req</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Request</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Response</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">next</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NextFunction</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Request...&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(req.params);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Injectable, NestMiddleware } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@nestjs/common&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Request, Response, NextFunction } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;express&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#6F42C1;">Injectable</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#6A737D;">// 创建中间件类，实现NestMiddleware接口</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LoggerMiddleware</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">NestMiddleware</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(</span><span style="color:#E36209;">req</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Request</span><span style="color:#24292E;">, </span><span style="color:#E36209;">res</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Response</span><span style="color:#24292E;">, </span><span style="color:#E36209;">next</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">NextFunction</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Request...&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(req.params);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="在-appmodule-级别使用中间件" tabindex="-1">在 AppModule 级别使用中间件 <a class="header-anchor" href="#在-appmodule-级别使用中间件" aria-label="Permalink to &quot;在 AppModule 级别使用中间件&quot;">​</a></h2><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { MiddlewareConsumer, NestModule } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@nestjs/common&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { LoggerMiddleware } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./logger.middleware&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AppModule</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NestModule</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 使用中间件,configure 函数可以异步</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">configure</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">consumer</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MiddlewareConsumer</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    consumer.</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(LoggerMiddleware).</span><span style="color:#B392F0;">forRoutes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;cats&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { MiddlewareConsumer, NestModule } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@nestjs/common&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { LoggerMiddleware } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./logger.middleware&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AppModule</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">NestModule</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 使用中间件,configure 函数可以异步</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">configure</span><span style="color:#24292E;">(</span><span style="color:#E36209;">consumer</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MiddlewareConsumer</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    consumer.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(LoggerMiddleware).</span><span style="color:#6F42C1;">forRoutes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;cats&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>forRoutes</code>函数参数支持:</p><ul><li>一个或多个路由字符串 <code>forRoutes(&#39;cats&#39;)</code></li><li>一个或多个路由字符串和请求方法，即 RouteInfo 对象 <code>forRoutes({ path: &#39;cats&#39;, method: RequestMethod.GET });</code></li><li>一个或多个路由字符串通配符和请求方法 <code>forRoutes({ path: &#39;ab*cd&#39;, method: RequestMethod.ALL });</code></li><li>一个或多个控制器 <code>forRoutes(CatsController，DogsController, FooController);</code></li></ul><h2 id="功能中间件" tabindex="-1">功能中间件 <a class="header-anchor" href="#功能中间件" aria-label="Permalink to &quot;功能中间件&quot;">​</a></h2><p>每当你的中间件不需要任何依赖时，请考虑使用更简单的 功能中间件 替代方案。</p><h2 id="其他参考" tabindex="-1">其他参考 <a class="header-anchor" href="#其他参考" aria-label="Permalink to &quot;其他参考&quot;">​</a></h2><p><a href="https://nest.nodejs.cn/middleware#%E6%8E%92%E9%99%A4%E8%B7%AF%E7%94%B1" target="_blank" rel="noreferrer">排除路由</a><br><a href="https://nest.nodejs.cn/middleware#%E5%A4%9A%E4%B8%AA%E4%B8%AD%E9%97%B4%E4%BB%B6" target="_blank" rel="noreferrer">多个中间件</a><br><a href="https://nest.nodejs.cn/middleware#%E5%85%A8%E5%B1%80%E4%B8%AD%E9%97%B4%E4%BB%B6" target="_blank" rel="noreferrer">全局中间件</a> 仅能使用功能中间件</p>`,10),o=[e];function r(t,c,E,y,i,d){return n(),a("div",null,o)}const F=s(p,[["render",r]]);export{u as __pageData,F as default};
